sudo: required
dist: trusty
language: python
matrix:
    include:
        - python: 3.6
          env: KERAS_BACKEND=tensorflow TEST_MODE=PEP8
        - python: 3.6
          env: KERAS_BACKEND=theano TEST_MODE=GENERAL
        - python: 3.6
          env: KERAS_BACKEND=theano TEST_MODE=ENCODINGS
        - python: 3.6
          env: KERAS_BACKEND=theano TEST_MODE=GRU DEPTH=shallow
        - python: 3.6
          env: KERAS_BACKEND=theano TEST_MODE=LSTM DEPTH=shallow
        - python: 3.6
          env: KERAS_BACKEND=theano TEST_MODE=ConditionalGRU DEPTH=shallow
        - python: 3.6
          env: KERAS_BACKEND=theano TEST_MODE=ConditionalLSTM DEPTH=shallow
        - python: 3.6
          env: KERAS_BACKEND=theano TEST_MODE=GRU DEPTH=deep DIR=unidir
        - python: 3.6
          env: KERAS_BACKEND=theano TEST_MODE=LSTM DEPTH=deep DIR=unidir
        - python: 3.6
          env: KERAS_BACKEND=theano TEST_MODE=ConditionalGRU DEPTH=deep DIR=unidir
        - python: 3.6
          env: KERAS_BACKEND=theano TEST_MODE=ConditionalLSTM DEPTH=deep DIR=unidir
        - python: 3.6
          env: KERAS_BACKEND=theano TEST_MODE=GRU DEPTH=deep DIR=bidir
        - python: 3.6
          env: KERAS_BACKEND=theano TEST_MODE=LSTM DEPTH=deep DIR=bidir
        - python: 3.6
          env: KERAS_BACKEND=theano TEST_MODE=ConditionalGRU DEPTH=deep DIR=bidir
        - python: 3.6
          env: KERAS_BACKEND=theano TEST_MODE=ConditionalLSTM DEPTH=deep DIR=bidir
        - python: 3.6
          env: KERAS_BACKEND=theano TEST_MODE=transformer DEPTH=deep DIR=unidir
        - python: 3.6
          env: KERAS_BACKEND=tensorflow TEST_MODE=GENERAL
        - python: 3.6
          env: KERAS_BACKEND=tensorflow TEST_MODE=ENCODINGS
        - python: 3.6
          env: KERAS_BACKEND=tensorflow TEST_MODE=GRU DEPTH=shallow
        - python: 3.6
          env: KERAS_BACKEND=tensorflow TEST_MODE=LSTM DEPTH=shallow
        - python: 3.6
          env: KERAS_BACKEND=tensorflow TEST_MODE=ConditionalGRU DEPTH=shallow
        - python: 3.6
          env: KERAS_BACKEND=tensorflow TEST_MODE=ConditionalLSTM DEPTH=shallow
        - python: 3.6
          env: KERAS_BACKEND=tensorflow TEST_MODE=GRU DEPTH=deep DIR=bidir
        - python: 3.6
          env: KERAS_BACKEND=tensorflow TEST_MODE=LSTM DEPTH=deep DIR=bidir
        - python: 3.6
          env: KERAS_BACKEND=tensorflow TEST_MODE=ConditionalGRU DEPTH=deep DIR=bidir
        - python: 3.6
          env: KERAS_BACKEND=tensorflow TEST_MODE=ConditionalLSTM DEPTH=deep DIR=bidir
        - python: 3.6
          env: KERAS_BACKEND=tensorflow TEST_MODE=GRU DEPTH=deep DIR=unidir
        - python: 3.6
          env: KERAS_BACKEND=tensorflow TEST_MODE=LSTM DEPTH=deep DIR=unidir
        - python: 3.6
          env: KERAS_BACKEND=tensorflow TEST_MODE=ConditionalGRU DEPTH=deep DIR=unidir
        - python: 3.6
          env: KERAS_BACKEND=tensorflow TEST_MODE=ConditionalLSTM DEPTH=deep DIR=unidir
        - python: 3.6
          env: KERAS_BACKEND=tensorflow TEST_MODE=transformer DEPTH=deep DIR=unidir          

# command to install dependencies
install:
  # code below is taken from http://conda.pydata.org/docs/travis.html
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - pip install -U pip
  - python -m venv test-environment
  - source test-environment/bin/activate
  - travis_wait 30 pip install .

  # Install Theano-1.0.4 (for compatibility with numpy>=1.16
  - pip install theano;

# command to run tests
script:
  # run keras backend init to initialize backend config
  - python -c "import keras.backend"
  - sed -i -e 's/"backend":[[:space:]]*"[^"]*/"backend":\ "'$KERAS_BACKEND'/g' ~/.keras/keras.json;
  - echo -e "Running tests with the following config:\n$(cat ~/.keras/keras.json)"
  - if [[ "$TEST_MODE" == "PEP8" ]]; then
      PYTHONPATH=$PWD:$PYTHONPATH python -m pytest --pep8 -m pep8 -n0;
    elif [[ "$TEST_MODE" == "GENERAL" ]]; then
      PYTHONPATH=$PWD:$PYTHONPATH pytest -s tests/test_load_params.py tests/utils/ tests/data_engine/ 2>&1 ;
    elif [[ "$TEST_MODE" == "ENCODINGS" ]]; then
      PYTHONPATH=$PWD:$PYTHONPATH pytest -s tests/encodings/ 2>&1 ;
    else
      if [[ "$DEPTH" == "shallow" ]]; then
        PYTHONPATH=$PWD:$PYTHONPATH pytest -s tests/NMT_architectures/${DEPTH}*_${TEST_MODE}.py  2>&1 ;
        PYTHONPATH=$PWD:$PYTHONPATH pytest -s tests/NMT_architectures/attention_${TEST_MODE}.py  2>&1 ;
      else
        PYTHONPATH=$PWD:$PYTHONPATH pytest -s tests/NMT_architectures/${DIR}_${DEPTH}*_${TEST_MODE}.py 2>&1 ;
      fi
    fi
